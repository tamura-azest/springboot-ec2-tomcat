# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "ec2" ]
  pull_request:
    branches: [ "ec2" ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ec2
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B -DskipTests=true package -Pec2 --file Springboot-Login-Qiita-master/pom.xml

    - uses: actions/upload-artifact@v4
      with:
        name: appwar
        path: Springboot-Login-Qiita-master/target/SpringbootLoginQiita-0.0.1-SNAPSHOT.war

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: ec2
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: appwar
          path: ~/
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with: # shimataro/ssh-key-actionに渡すパラメーター
          key: ${{ secrets.SSH_KEY }} # 必須
          name: id_rsa # 省略可
          known_hosts: ${{ secrets.KNOWN_HOSTS }} # 必須
      - name: run deploy script
        run: |
          scp ~/SpringbootLoginQiita-0.0.1-SNAPSHOT.war ec2-user@${{ vars.EC2_HOST }}:~/ROOT.war
          ssh ec2-user@${{ vars.EC2_HOST }} "~/tomcat-build.sh"
